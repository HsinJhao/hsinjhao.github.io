<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>KL散度(Kullback-Leibler Divergence)介绍及详细公式推导</title>
      <link href="/2019/05/22/KL-DivergenceIntroduction/"/>
      <url>/2019/05/22/KL-DivergenceIntroduction/</url>
      
        <content type="html"><![CDATA[<h1 id="KL散度简介"><a href="#KL散度简介" class="headerlink" title="KL散度简介"></a>KL散度简介</h1><p>KL散度的概念来源于概率论和信息论中。KL散度又被称为：相对熵、互熵、鉴别信息、<code>Kullback</code>熵、<code>Kullback-Leible</code>散度(即KL散度的简写)。在机器学习、深度学习领域中，KL散度被广泛运用于变分自编码器中(<code>Variational AutoEncoder</code>,简称VAE)、EM算法、GAN网络中。</p><hr><h1 id="KL散度定义"><a href="#KL散度定义" class="headerlink" title="KL散度定义"></a>KL散度定义</h1><p>KL散度的定义是建立在熵(Entropy)的基础上的。此处以离散随机变量为例，先给出熵的定义，再给定KL散度定义。</p><p>若一个离散随机变量$\mathbf{X}$的可能取值为$X=\{x_1,x_2,\cdots,x_n\}$，而对应的概率为$p_i = p(X = x_i)$，则随机变量$\mathbf{X}$的熵定义为：</p><script type="math/tex; mode=display">H(X) = - \sum_{i=1}^{n} p(x_i) \log p(x_{i})</script><blockquote><p>规定当$p(x_i) = 0$时,$p(x_i) \log p(x_i) = 0$</p></blockquote><p>若有两个随机变量$\mathbf{P、Q}$，且其概率分布分别为$p(x)、q(x)$，则$p$相对$q$的相对熵为：</p><script type="math/tex; mode=display">D_{KL}(p||q) = \sum_{i=1}^{n}p(x) \log \frac{p(x)}{q(x)}</script><p>之所以称之为相对熵，是因为其可以通过两随机变量的<a href="https://www.wikiwand.com/zh-hans/%E4%BA%A4%E5%8F%89%E7%86%B5" target="_blank" rel="noopener">交叉熵(Cross-Entropy)</a>以及信息熵推导得到：<br>针对上述离散变量的概率分布$p(x)、q(x)$而言，其交叉熵定义为：</p><script type="math/tex; mode=display">\begin{aligned}H(p,q) = & \sum_{x}p(x) \log \frac{1}{q(x)} \\= & - \sum_{x} p(x) \log q(x)\end{aligned}</script><blockquote><p>在信息论中，交叉熵可认为是对预测分布$q(x)$用真实分布$p(x)$来进行编码时所需要的信息量大小。</p></blockquote><p>因此，KL散度或相对熵可通过下式得出：</p><script type="math/tex; mode=display">\begin{aligned}D_{KL}(p||q) = & H(p,q)-H(p) \\=& - \sum_{x} p(x) \log q(x) - \sum_{x}-p(x)\log p(x)\\=& -\sum_{x} p(x) (\log q(x)-\log p(x))\\=& -\sum_{x}p(x) \log \frac{q(x)}{p(x)}\end{aligned}</script><hr><h1 id="KL散度的数学性质"><a href="#KL散度的数学性质" class="headerlink" title="KL散度的数学性质"></a>KL散度的数学性质</h1><p>KL散度可以用来衡量两个分布之间的差异，其具有如下数学性质：</p><h2 id="正定性"><a href="#正定性" class="headerlink" title="正定性"></a>正定性</h2><script type="math/tex; mode=display">D_{KL}(p||q) \geq  0</script><p>可用Gibbs 不等式直接得出。先给出Gibbs不等式的内容：</p><p>若$\sum_{i=1}^{n} p_i = \sum_{i=1}^{n} q_i  = 1$,且$p_i,q_i \in(0,1]$,则有：</p><script type="math/tex; mode=display"> -\sum_{i}^{n} p_i \log p_i \leq -\sum_{i}^{n} p_i \log q_i</script><p>当且仅当$p_i=q_i \forall i$等号成立。</p><p>Gibbs不等式的证明可见后文附录。</p><h2 id="不对称性"><a href="#不对称性" class="headerlink" title="不对称性"></a>不对称性</h2><p>KL散度并不是一个真正的度量或者距离，因为它不具有对称性：</p><script type="math/tex; mode=display">D(p \| q) \neq D(q \| p)</script><blockquote><p>各种散度中，Jensen-Shannon divergence(JS散度)是对称的。</p></blockquote><p>对KL散度不对称性的直观解释可见<a href="https://zhuanlan.zhihu.com/p/45131536" target="_blank" rel="noopener">链接</a>。</p><hr><h1 id="从不同角度解读KL散度"><a href="#从不同角度解读KL散度" class="headerlink" title="从不同角度解读KL散度"></a>从不同角度解读KL散度</h1><h2 id="统计学意义上的KL散度"><a href="#统计学意义上的KL散度" class="headerlink" title="统计学意义上的KL散度:"></a>统计学意义上的KL散度:</h2><p>在统计学意义上来说，KL散度可以用来衡量两个分布之间的差异程度。若两者差异越小，KL散度越小，反之亦反。当两分布一致时，其KL散度为0。正是因为其可以衡量两个分布之间的差异，所以在VAE、EM、GAN中均有使用到KL散度。</p><h2 id="信息论角度的KL散度"><a href="#信息论角度的KL散度" class="headerlink" title="信息论角度的KL散度:"></a>信息论角度的KL散度:</h2><p>KL散度在信息论中的专业术语为相对熵。其可理解为编码系统对信息进行编码时所需要的平均附加信息量。其中信息量的单位随着计算公式中$log$运算的底数而变化。</p><blockquote><ul><li>log底数为2：单位为比特(<code>bit</code>)</li><li>log底数为<code>e</code>：单位为奈特(<code>nat</code>)</li></ul></blockquote><p>若对从统计学角度直观解释KL散度感兴趣，可参阅以下文章：</p><ul><li>英文版[推荐]:<a href="https://www.countbayesie.com/blog/2017/5/9/kullback-leibler-divergence-explained" target="_blank" rel="noopener">Kullback-Leibler Divergence Explained</a></li><li>英文版中文翻译[推荐]: <a href="https://blog.csdn.net/xzy_thu/article/details/71730507" target="_blank" rel="noopener">解释Kullback-Leibler散度</a></li><li>中文版:<a href="https://www.jiqizhixin.com/articles/2018-05-29-2" target="_blank" rel="noopener">直观解读KL散度的数学概念</a></li></ul><hr><h1 id="连续随机变量的KL散度推导"><a href="#连续随机变量的KL散度推导" class="headerlink" title="连续随机变量的KL散度推导"></a>连续随机变量的KL散度推导</h1><h2 id="服从一维高斯分布的随机变量KL散度"><a href="#服从一维高斯分布的随机变量KL散度" class="headerlink" title="服从一维高斯分布的随机变量KL散度"></a>服从一维高斯分布的随机变量KL散度</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>假设 <code>p</code> 和 <code>q</code> 均是服从$N~(\mu_1,\sigma_1^2)$和$N~(\mu_2,\sigma_2^2)$的随机变量的概率密度函数 (<em>probability density function</em>) ，则从 <code>q</code>  到 <code>p</code> 的KL散度定义为：</p><script type="math/tex; mode=display">\begin{aligned}D_{KL}(p||q)=& \int \left[\log(p(x)) - \log( q(x)) \right]p(x)\ dx \\=& \int \left[ \ p(x)\log(p(x)) - p(x)\log(q(x)) \right ] \ dx\end{aligned}</script><p>  已知正态分布的概率密度函数(<code>probability density function</code>)如下式：</p><script type="math/tex; mode=display">  \begin{aligned}  p(x)=\frac{1}{\sqrt{2\pi}\sigma_1} \exp\left(-\frac{(x-\mu_1)^2}{2\sigma_1^2}  \right)  \\  q(x)=\frac{1}{\sqrt{2\pi}\sigma_2} \exp\left(-\frac{(x-\mu_2)^2}{2\sigma_2^2}  \right)  \end{aligned}</script><h3 id="KL散度推导"><a href="#KL散度推导" class="headerlink" title="KL散度推导"></a>KL散度推导</h3><p>  根据$KL$散度公式可以将其分为两项进行计算，第一项$\int p(x)\log(p(x)) dx$计算如下：</p><script type="math/tex; mode=display">  \begin{aligned}  \int p(x)\log(p(x)) dx  =& \int p(x) \log \left[\frac{1}{\sqrt{2\pi}\sigma_1} exp\left(-\frac{(x-\mu_1)^2}{2\sigma_1^2}  \right)\right ] dx  \\  =& \int p(x) \left[ \log \frac{1}{\sqrt{2\pi}\sigma_1} + \log exp\left(-\frac{(x-\mu_1)^2}{2\sigma_1^2}  \right) \right] dx  \\  =& -\frac{1}{2}\log(2\pi\sigma_1^2) + \int p(x)\left(-\frac{(x-\mu_1)^2}{2\sigma_1^2}  \right) dx  \\  =& -\frac{1}{2}\log(2\pi\sigma_1^2) - \frac{\int p(x) x^2 dx - \int p(x) 2x\mu_1 dx + \int p(x) \mu_1^2 dx}{2 \sigma_1^2}   \\  =& -\frac{1}{2}\log(2\pi\sigma_1^2) - \frac{(\mu_1^2+\sigma_1^2)\ - (2\mu_1\times\mu_1) \ + \mu_1^2}{2 \sigma_1^2}   \\  =& - \frac{1}{2} \left[ 1+\log(2\pi \sigma_1^2) \right]  \end{aligned}</script><p>  第二项可以同第一项按照类似的方式进行展开化简，如下：</p><script type="math/tex; mode=display">  \begin{aligned}  \int p(x)\log(q(x)) dx   =& \int p(x) \log \left[\frac{1}{\sqrt{2\pi}\sigma_2} exp\left(-\frac{(x-\mu_2)^2}{2\sigma_2^2}  \right)\right ] dx  \\  =& \int p(x) \left[ \log \frac{1}{\sqrt{2\pi}\sigma_2} + \log exp\left(-\frac{(x-\mu_2)^2}{2\sigma_2^2}  \right) \right] dx  \\  =& -\frac{1}{2}\log(2\pi\sigma_2^2) + \int p(x)\left(-\frac{(x-\mu_2)^2}{2\sigma_2^2}  \right) dx  \\  =& -\frac{1}{2}\log(2\pi\sigma_2^2) - \frac{\int p(x) x^2 dx - \int p(x) 2x\mu_2 dx + \int p(x) \mu_2^2 dx}{2 \sigma_2^2}   \\  =& -\frac{1}{2}\log(2\pi\sigma_2^2) - \frac{(\mu_1^2+\sigma_1^2)\ - (2\mu_2\times\mu_1) \ + \mu_2^2}{2 \sigma_2^2}   \\  =& -\frac{1}{2}\log(2\pi\sigma_2^2) - \frac{\sigma_1^2\ + (\mu_1 -\mu_2)^2 }{2 \sigma_2^2}   \end{aligned}</script><p>  所以可以简化<code>KL</code>散度公式如下：</p><script type="math/tex; mode=display">  \begin{aligned}  KL(p,q)  =& \int \left[\ p(x)\log(p(x)) - p(x)\log(q(x))\right ]\ dx  \\  =& - \frac{1}{2} \left[ 1+\log(2\pi \sigma_1^2) \right] - \left[-\frac{1}{2}\log(2\pi\sigma_2^2) - \frac{\sigma_1^2\ + (\mu_1 -\mu_2)^2 }{2 \sigma_2^2} \right]  \\  =& \ \log \frac{\sigma_2}{\sigma_1} \ +\frac{\sigma_1^2\ + (\mu_1 -\mu_2)^2 }{2 \sigma_2^2} \ - \frac{1}{2}  \end{aligned}</script><h2 id="服从多元高斯分布的随机变量KL散度"><a href="#服从多元高斯分布的随机变量KL散度" class="headerlink" title="服从多元高斯分布的随机变量KL散度"></a>服从多元高斯分布的随机变量KL散度</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>其定义与一元高斯分布假设下一致，只是 <code>p</code> 和 <code>q</code> 服从的分布形式产生了改变：</p><script type="math/tex; mode=display">\begin{aligned}p(x) & \sim N~(\mathbf{\mu_1},\Sigma_1^2) \\ &=  {1 \over { { {(2\pi )}^{n/2} }{ {\left| \Sigma_{1}     \right|}^{1/2} } } }\exp  \left(- {1 \over 2}{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right ) \end{aligned}</script><script type="math/tex; mode=display">\begin{aligned}q(x) & \sim N~(\mathbf{\mu_{2} },\Sigma_{2}^2) \\ &=  {1 \over { { {(2\pi )}^{n/2} }{ {\left| \Sigma_{2}     \right|}^{1/2} } } }\exp  \left(- {1 \over 2}{(x - \mu_{2})^T}{\Sigma_{2} ^{ - 1} }(x    - \mu_{2})\right ) \end{aligned}</script><p>其中:</p><script type="math/tex; mode=display">\mu_{1},\mu_{2} \in \mathbb{R^{n\times 1} }</script><script type="math/tex; mode=display">\Sigma_{1},\Sigma_{2} \in \mathbb{R^{n\times n} }</script><h3 id="KL散度推导-1"><a href="#KL散度推导-1" class="headerlink" title="KL散度推导"></a>KL散度推导</h3><p>与一元高斯分布类似，可将$D_{KL}(p||q)$分为两部分：</p><p>第一部分：</p><script type="math/tex; mode=display">\begin{aligned}& \int p(x)\log(p(x)) dx\\= & \int p(x) \log \left[\frac{1}{ {(2\pi)^{n/2} } | \Sigma_{1} | ^{1/2} } exp\left(- {1 \over 2}{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right )\right ] dx  \\= & \int p(x) \left[ \log \frac{1}{ {(2\pi)^{n/2} } | \Sigma_{1} | ^{1/2} } + \log exp\left(- {1 \over 2}{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right ) \right] dx  \\= & \log \frac{1}{ {(2\pi)^{n/2} } | \Sigma_1 | ^{1/2} } + \int p(x) \left(- {1 \over 2}{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right ) dx \\= & \log \frac{1}{ {(2\pi)^{n/2} } | \Sigma_1 | ^{1/2} }  + E_{p(x)}\left[- {1 \over 2}{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right] \\= & \log \frac{1}{ {(2\pi)^{n/2} } | \Sigma_1 | ^{1/2} }  - {1 \over 2} E_{p(x)}\left[{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right] \end{aligned}</script><p>同理，第二部分可写为：</p><script type="math/tex; mode=display">\begin{aligned}\\ & \int p(x)\log(q(x)) dx\\= & \log \frac{1}{ {(2\pi)^{n/2} } | \Sigma_{2} | ^{1/2} }  - {1 \over 2} E_{p(x)}\left[{(x - \mu_{2})^T}{\Sigma_{2} ^{ - 1} }(x    - \mu_{2})\right]\end{aligned}</script><p>因此可将服从多元高斯分布随机变量的KL散度写为：</p><script type="math/tex; mode=display">\begin{aligned}D_{KL}(p||q) & = \int p(x)\log(p(x)) dx-\int p(x)\log(q(x)) dx\\& = \log \frac{ {(2\pi)^{n/2} } | \Sigma_{2} | ^{1/2} }{ {(2\pi)^{n/2} } | \Sigma_1 | ^{1/2} }  - {1 \over 2} E_{p(x)}\left[{(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right] +{1 \over 2} E_{p(x)}\left[{(x - \mu_{2})^T}{\Sigma_{2} ^{ - 1} }(x    - \mu_{2})\right] \\& = \frac{1}{2}\log \frac{ | \Sigma_{2} | }{ {} | \Sigma_1 | }  + \frac{1}{2}E_{p(x)}\left[{(x - \mu_{2})^T}{\Sigma_{2} ^{ - 1} }(x    - \mu_{2}) - {(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x    - \mu_{1})\right]\end{aligned}</script><p>其中$E_{p}(\cdot)$代表$\cdot$在概率密度函数$p(x)$的期望。此处需引入涉及多元变量的期望矩阵化求解方法。具体证明见后续附录，此处直接给出多元正态分布下期望矩阵化的表示结果：</p><script type="math/tex; mode=display">E\left( { {x^T}Ax} \right) = tr(A\Sigma ) + {\mu^T}A\mu</script><p>因此：</p><script type="math/tex; mode=display">\begin{aligned}D_{KL}(p||q) & =  \frac{1}{2}\log \frac{ | \Sigma_{2} | }{ {} | \Sigma_1 | }  + \frac{1}{2}E_{p(x)}\left[{(x - \mu_{2})^T}{\Sigma_{2} ^{ - 1} }(x- \mu_{2}) - {(x - \mu_{1})^T}{\Sigma_{1} ^{ - 1} }(x- \mu_{1})\right]\\& = \frac{1}{2}\log \frac{ | \Sigma_{2} | }{ {} | \Sigma_1 | }  + \frac{1}{2}tr(\Sigma_{2}^{-1}\Sigma_{1})  + (\mu_{1}-\mu_{2})^{T}\Sigma_{2}^{-1}(\mu_{1}-\mu_{2})^{T} \\&\qquad \qquad \qquad - \frac{1}{2}tr(\Sigma_{1}^{-1}\Sigma_{1})  +  (\mu_{1}-\mu_{1})^{T}\Sigma_{2}^{-1}(\mu_{1}-\mu_{1})^{T} \\& = \frac{1}{2}\log \frac{ | \Sigma_{2} | }{ {} | \Sigma_1 | }  + \frac{1}{2}tr(\Sigma_{2}^{-1}\Sigma_{1})  + (\mu_{1}-\mu_{2})^{T}\Sigma_{2}^{-1}(\mu_{1}-\mu_{2})^{T} - \frac{1}{2} n\end{aligned}</script><hr><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="多元高斯分布下期望证明："><a href="#多元高斯分布下期望证明：" class="headerlink" title="多元高斯分布下期望证明："></a>多元高斯分布下期望证明：</h2><p>为证明多元高斯分布下，下式：</p><script type="math/tex; mode=display">E\left( {x^T Ax} \right) = tr(A\Sigma ) + {\mu^T}A\mu</script><p>成立，需引入以下性质:</p><ul><li><p>矩阵的迹的性质：</p><script type="math/tex; mode=display">\begin{aligned}tr(\alpha A + \beta B)  &= \alpha tr(A) + \beta tr(B)\\tr(A) &= tr({A^T})\\tr(AB) &= tr(BA)\\&\Rightarrow tr(ABC) = tr(CAB) = tr(BCA)\end{aligned}</script></li></ul><blockquote><p>若$\lambda \in \mathbb{R^{n\times 1} }$，即$\lambda$为列向量时，则${\lambda ^T}A\lambda$为标量，存在以下性质：</p><script type="math/tex; mode=display">{\lambda ^T}A\lambda  = tr({\lambda ^T}A\lambda ) = tr(A\lambda {\lambda ^T})</script></blockquote><ul><li><p>多元高斯分布中均值$\mu$和方差$\Sigma$的性质：</p><ul><li><p>$E\left[ {x{x^T} } \right] = \Sigma  + \mu{\mu^T}$:</p><p>   证明：</p></li></ul><script type="math/tex; mode=display"> \begin{aligned}\Sigma &= E[(x-\mu)(x-\mu)^{T}]  \\ \because(A-B)^{T} = A^{T}-B^{T }    \quad \therefore \quad&=E[(x-\mu)(x^{T}-\mu^{T })]\\& = E[xx^{T} - x \mu^{T}-\mu x^{T}- \mu \mu^{T }] \\ \because x:随机变量 \quad \mu:const \quad \therefore \quad& = E(xx^{T}) - E(x)\mu^{T} - \mu E(x^{T}) - \mu \mu^{T}\\& =  E(xx^{T}) -  \mu \mu^{T} \end{aligned}</script><ul><li><p>$E\left( {x^T Ax} \right) = tr(A\Sigma ) + {\mu^T}A\mu$:</p><p>证明：<br>由于$x^{T}Ax$最终结果为标量，利用前述矩阵的迹的性质可有：</p></li></ul><script type="math/tex; mode=display">  \begin{aligned}E\left( { {x^T}Ax} \right)  &  = E\left[ {tr({x^T}Ax)} \right]  \\&  = E\left[ {tr(Ax{x^T})} \right]  \\&  = tr\left[ {E\left( {Ax{x^T} } \right)} \right]  \\&  = tr\left[ {AE\left( {x{x^T} } \right)} \right]  \\ \because A = const  \quad  \therefore \quad&  = tr\left[ {A(\Sigma  + u{u^T})} \right]    \\ \because E\left[ {x{x^T} } \right] = \Sigma  + \mu{\mu^T}   \quad \therefore \quad&  = tr(A\Sigma ) + tr(A\mu{\mu^T})  \\ &  = tr(A\Sigma ) + tr({\mu^T}A\mu)  \\ \because {\mu^T}A\mu \in \mathbb{R} \quad  \therefore \quad&  = tr(A\Sigma ) + {\mu^T}A\mu \\   \end{aligned}</script></li></ul><h2 id="Gibbs不等式的证明"><a href="#Gibbs不等式的证明" class="headerlink" title="Gibbs不等式的证明"></a>Gibbs不等式的证明</h2><p>Gibbs不等式的内容如下：</p><p>若$\sum_{i=1}^{n} p_i = \sum_{i=1}^{n} q_i  = 1$,且$p_i,q_i \in(0,1]$,则有：</p><script type="math/tex; mode=display"> -\sum_{i}^{n} p_i \log p_i \leq -\sum_{i}^{n} p_i \log q_i</script><p>当且仅当$p_i=q_i \forall i$等号成立。</p><p>Gibbs不等式等价于下式：</p><script type="math/tex; mode=display">0 \geq  \sum_{i=1}^{n} p_{i} \log q_{i}-\sum_{i=1}^{n} p_{i} \log p_{i} = \sum_{i=1}^{n} p_{i} \log \frac{q_{i} }{p_{i} }= - D_{KL}(P \| Q)</script><p>以下证明$\sum_{i=1}^{n} p_{i} \log \left(q_{i} / p_{i}\right) \leq 0$:</p><h3 id="法一："><a href="#法一：" class="headerlink" title="法一："></a>法一：</h3><p>已知$ln(x) \leq x-1$,如下图所示：</p><p><img src="https://i.loli.net/2019/05/25/5ce90f6fd78fb14436.png" alt="ln(x) 与 x-1 的数学图像-w50"></p><p>由上图或者严格数学证明可知，当且仅当$x=1$时$ln(x) = x-1$，即等号成立。</p><h3 id="法二："><a href="#法二：" class="headerlink" title="法二："></a>法二：</h3><p>根据<a href="https://www.wikiwand.com/zh/%E5%BB%B6%E6%A3%AE%E4%B8%8D%E7%AD%89%E5%BC%8F" target="_blank" rel="noopener">Jensen不等式</a>在凸积分中的命题：</p><p>若$g$是任意实值可测函数，$\phi$在$g$的值域中是凸函数，则：</p><script type="math/tex; mode=display">\phi \left ( \int_{-\infty}^{+\infty} g(x) f(x) dx\right ) \leq  \int_{-\infty}^{+\infty} \phi (g(x)) f(x) dx</script><p>若$g(x)=x$,则上式可简化为一常用特例：</p><script type="math/tex; mode=display">\phi \left ( \int_{-\infty}^{+\infty} x f(x) dx\right ) \leq  \int_{-\infty}^{+\infty} \phi (x) f(x) dx</script><p>因此：</p><script type="math/tex; mode=display">D_{K L}(p \| q)=-\int p(x) \log \frac{q(x)}{p(x)} d x \geq-\log \int q(x) d x=0</script><p>其中$D_{K L}(p | q)$与Jensen不等式有以下对应关系：</p><script type="math/tex; mode=display">\begin{aligned}& \phi(x) = log(x)\\& f(x) = p(x)\end{aligned}</script><p>由此得证。</p><hr><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li>Gibbs不等式：<a href="https://blog.csdn.net/ACdreamers/article/details/44657745" target="_blank" rel="noopener">相对熵(KL散度)</a></li><li>Jensen不等式: <a href="https://www.wikiwand.com/zh/%E5%BB%B6%E6%A3%AE%E4%B8%8D%E7%AD%89%E5%BC%8F" target="_blank" rel="noopener">Jensen’s inequality</a><ul><li>KL散度正定性的证明：<a href="https://zhuanlan.zhihu.com/p/45131536" target="_blank" rel="noopener">机器学习中的散度</a></li></ul></li><li>KL散度推导：<ul><li><a href="https://blog.csdn.net/wangpeng138375/article/details/78060753" target="_blank" rel="noopener">多变量高斯分布之间的KL散度(KL Divergence)</a></li><li><a href="https://stats.stackexchange.com/questions/60680/kl-divergence-between-two-multivariate-gaussians?noredirect=1&amp;lq=1" target="_blank" rel="noopener">KL divergence between two multivariate Gaussians</a></li><li><a href="https://stats.stackexchange.com/questions/7440/kl-divergence-between-two-univariate-gaussians" target="_blank" rel="noopener">KL divergence between two univariate Gaussians</a></li></ul></li><li>均匀分布与正态分布的KL散度比较：<a href="https://blog.csdn.net/xzy_thu/article/details/71730507" target="_blank" rel="noopener">解释Kullback-Leibler散度</a></li><li>KL散度与交叉熵：<a href="https://blog.csdn.net/witnessai1/article/details/79574812" target="_blank" rel="noopener">KL散度(相对熵)、交叉熵的解析</a></li><li>信息论中的熵：<a href="https://blog.csdn.net/xierhacker/article/details/53463567" target="_blank" rel="noopener">机器学习笔记十：各种熵总结</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Deep Learning </category>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KL-Divergence </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图像分割领域中的评价标准</title>
      <link href="/2019/05/22/EvaluationCriterionOfImageSegmentation/"/>
      <url>/2019/05/22/EvaluationCriterionOfImageSegmentation/</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>在图像分割领域中，需要对分割结果进行评价。评价之前一般需要先对分割后的每一类别进行二值化处理，然后与标签进行类别映射。另外，图像分割问题是一个有监督问题，即训练样本要求需要Ground Truth，对分割结果进行评价同样是基于Ground Truth来展开的。</p><h1 id="评价指标"><a href="#评价指标" class="headerlink" title="评价指标"></a>评价指标</h1><p>评价指标有以下几类：</p><ul><li>Dice Similarity Coefficient :Dice相似度系数<br>简单而言，Dice系数是一种集合相似度度量函数，通常用于计算两个样本的相似度:</li></ul><script type="math/tex; mode=display">s = \frac{2 \left | X \cap Y \right |}{\left | X+Y\right |}</script><p>具体可见<a href="https://www.wikiwand.com/zh-hans/Dice%E7%B3%BB%E6%95%B0" target="_blank" rel="noopener">链接</a>。</p><ul><li>Hausdorff Distance</li><li>Mean Absolute Distance:平均绝对距离</li><li>Jaccard Index</li><li>Intersection-Over-Union:IoU,交并比</li><li>Mean Intersection-Over-Union:MIoU,平均交并比</li></ul>]]></content>
      
      
      <categories>
          
          <category> Deep Learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Evaluation </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用hexo和github搭建个人博客的辛酸之路</title>
      <link href="/2019/05/16/BuildBlogsBasedOnHexoAndGithub/"/>
      <url>/2019/05/16/BuildBlogsBasedOnHexoAndGithub/</url>
      
        <content type="html"><![CDATA[<p>由于个人强迫症，希望将自己值得记录下来的东西通过一种合理的方式进行记录。于是选择了搭建个人博客的方式来实现。通过<em>知乎</em>和<em>面向Google编程</em>后发现利用<code>hexo</code>和<code>github pages</code>来搭建个人博客的方式，最适合我这种穷学生折腾。</p><hr><h1 id="搭建博客基本框架"><a href="#搭建博客基本框架" class="headerlink" title="搭建博客基本框架"></a>搭建博客基本框架</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在搭建之间，需要先安装以下应用程序和注册相应账户以满足依赖项：</p><ul><li>安装Node.js</li><li>安装Git</li><li>安装Hexo</li><li>注册Github账号</li></ul><p>上述步骤最好依次进行，并可参考相应链接，避免踩坑。相应教程在下节给出。</p><p>值得说明的一点是，虽然此搭建博客的方案基本免费，但希望根据个人需求来进行选择。若除开博客功能外不再使用Github其他功能，专门注册账户来实现博客搭建而导致资源浪费，个人不太推崇。若自己想更安全更自由的搭建方式，个人建议注册相应域名。</p><h2 id="搭建教程"><a href="#搭建教程" class="headerlink" title="搭建教程"></a>搭建教程</h2><p>个人在搭建过程中参考了以下搭建教程，在此感谢前人铺路。并且发现官方技术支持文档基本上是新手最好的参考文档了，在此给出<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/" target="_blank" rel="noopener">中文参考链接</a>。</p><ul><li><a href="https://godweiyang.com/2018/04/13/hexo-blog/" target="_blank" rel="noopener">超详细Hexo+Github博客搭建小白教程</a>:按照此教程，基本能搭建好初步框架。并且其中还有部分骚操作，比如插入<em>网易云音乐</em>播放链接等。可主要依靠此教程完成大致搭建工作。</li><li><a href="https://zhuanlan.zhihu.com/p/28329874" target="_blank" rel="noopener">Hexo与Github搭建个人博客</a>:知乎这篇博文与上一个教程可相互补充，此博文为辅。</li></ul><hr><h1 id="自定义博客内容"><a href="#自定义博客内容" class="headerlink" title="自定义博客内容"></a>自定义博客内容</h1><h2 id="博客功能添加"><a href="#博客功能添加" class="headerlink" title="博客功能添加"></a>博客功能添加</h2><p>在搭建完博客的基本框架后，可以对以下内容进行自定义：</p><h3 id="添加标签、分类、目录"><a href="#添加标签、分类、目录" class="headerlink" title="添加标签、分类、目录"></a>添加标签、分类、目录</h3><p>参考<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/advanced.html" target="_blank" rel="noopener">官方链接</a>。</p><h3 id="添加文章阅读次数"><a href="#添加文章阅读次数" class="headerlink" title="添加文章阅读次数"></a>添加文章阅读次数</h3><p>基于LeanCloud进行设置，参考<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/third-service/[LeanCloud]%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E6%AC%A1%E6%95%B0.html" target="_blank" rel="noopener">官方链接</a>。</p><h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p>由于个人比较喜欢github的评论系统风格，又查阅相应参考链接，<code>gitalk</code>是可以避免被墙、速度较快的评论系统。故添加第三方服务<code>gitalk</code>来实现评论系统。其主要的配置过程可参考<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/third-service/[Gitalk]%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F.html" target="_blank" rel="noopener">Next官方链接</a>。<br>其中个人遭遇了<strong>未找到相关的 Issues 进行评论，请联系@XXXXX初始化创建</strong>的问题，通过官方issue找到了原因，是因为没有对评论系统进行初始化。当然可能还存在其他问题，在此给出<a href="https://github.com/mzlogin/mzlogin.github.io/issues/63" target="_blank" rel="noopener">官方issue链接</a>,如遇到相应问题，可首先查看此链接排除。</p><h3 id="添加搜索、音乐外链播放器"><a href="#添加搜索、音乐外链播放器" class="headerlink" title="添加搜索、音乐外链播放器"></a>添加搜索、音乐外链播放器</h3><p>尚未进行，后续有空填坑。</p><h3 id="修改文章链接文本样式"><a href="#修改文章链接文本样式" class="headerlink" title="修改文章链接文本样式"></a>修改文章链接文本样式</h3><p>修改文件 <code>themes\next\source\css\_common\components\post\post.styl</code>，在末尾添加如下css样式：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 文章内链接文本样式</span><br><span class="line">.post-body p a&#123;</span><br><span class="line"><span class="function">  color: #0593<span class="title">d3</span>;</span></span><br><span class="line"><span class="function">  <span class="title">border</span>-<span class="title">bottom</span>: <span class="title">none</span>;</span></span><br><span class="line"><span class="function">  <span class="title">border</span>-<span class="title">bottom</span>: 1<span class="title">px</span> <span class="title">solid</span> #0593<span class="title">d3</span>;</span></span><br><span class="line"><span class="function">  &amp;:<span class="title">hover</span> &#123;</span></span><br><span class="line"><span class="function">    <span class="title">color</span>: #05<span class="title">ac50</span>;</span></span><br><span class="line"><span class="function">    <span class="title">border</span>-<span class="title">bottom</span>: <span class="title">none</span>;</span></span><br><span class="line"><span class="function">    <span class="title">border</span>-<span class="title">bottom</span>: 1<span class="title">px</span> <span class="title">solid</span> #<span class="title">fc6423</span>;</span></span><br><span class="line"><span class="function">  &#125;</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><p>其中相应的颜色可以自己定义，利用vscode还可以直观看到相应的颜色显示效果<br><img src="linkcolor.png" alt="文章链接文本颜色显示"></p><h3 id="添加字数统计和阅读时长功能"><a href="#添加字数统计和阅读时长功能" class="headerlink" title="添加字数统计和阅读时长功能"></a>添加字数统计和阅读时长功能</h3><p>从Hexo的Next主题6.0.0版本开始，其默认通过插件<code>hexo-symbols-count-time</code>来实现字数统计，通过git bash定位到博客根目录(如<code>E:\Blogs</code>)下后根据以下命令安装上述插件：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-symbols-count-<span class="built_in">time</span></span><br></pre></td></tr></table></figure></p><blockquote><p>注：有教程是安装<code>hexo-wordcount</code>来实现字数统计功能，但是需要修改太多东西，较为繁琐，最好和官方一致，并且只需要简单配置即可。故个人建议使用Next主题默认的<code>hexo-symbols-count-time</code>插件来实现上述功能。如需利用<code>hexo-wordcount</code>来实现，可参考<a href="https://eason-yang.com/2016/11/05/add-word-count-to-hexo-next/" target="_blank" rel="noopener">此链接</a>。</p></blockquote><p>然后需要修改主题配置文件和站点配置文件：</p><ul><li>修改站点配置文件<code>hexo _config.yml</code>：<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">symbols_count_time:</span></span><br><span class="line"><span class="function"><span class="title">symbols</span>: <span class="title">true</span> # 文章字数</span></span><br><span class="line"><span class="function"><span class="title">time</span>: <span class="title">true</span> # 阅读时长</span></span><br><span class="line"><span class="function"><span class="title">total_symbols</span>: <span class="title">true</span> # 所有文章总字数</span></span><br><span class="line"><span class="function"><span class="title">total_time</span>: <span class="title">true</span> # 所有文章阅读中时长</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>此文件为博客显示的基础配置，修改后需要重启服务才能更新博客内容。</p></blockquote><ul><li>修改主题配置文件<code>next _config.yml</code>:<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">symbols_count_time:</span></span><br><span class="line"><span class="function"><span class="title">separated_meta</span>: <span class="title">true</span>  # 是否换行显示 字数统计 及 阅读时长</span></span><br><span class="line"><span class="function"><span class="title">item_text_post</span>: <span class="title">true</span>  # 文章 字数统计 阅读时长 使用图标 还是 文本表示</span></span><br><span class="line"><span class="function"><span class="title">item_text_total</span>: <span class="title">false</span> # 博客底部统计 字数统计 阅读时长 使用图标 还是 文本表示</span></span><br><span class="line"><span class="function"><span class="title">awl</span>: 4</span></span><br><span class="line"><span class="function"><span class="title">wpm</span>: 275</span></span><br></pre></td></tr></table></figure></li></ul><p>具体字段含义可查看<a href="https://github.com/theme-next/hexo-symbols-count-time" target="_blank" rel="noopener">官方链接</a>.</p><h3 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h3><p>NexT主题下，默认的标签样式是这样的：</p><p><img src="https://i.loli.net/2019/05/25/5ce94c492642953620.png" alt="NexT默认标签样式"></p><p>我们可以通过修改<code>themes/next/layout/_macro/post.swig</code>文件中的以下片段实现标签样式的修改：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer class="post-footer"&gt;</span><br><span class="line">  &#123;% <span class="keyword">if</span> post.tags and post.tags.length and <span class="keyword">not</span> is_index %&#125;</span><br><span class="line">    &lt;div class="post-tags"&gt;</span><br><span class="line">      &#123;% <span class="keyword">for</span> tag <span class="keyword">in</span> post.tags %&#125;</span><br><span class="line">        &lt;a href="&#123;&#123; url_for(tag.<span class="built_in">path</span>) &#125;&#125;" # &#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>只需要将其中的<code>#</code>修改为<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code>即可实现以下标签样式：</p><p><img src="https://i.loli.net/2019/05/25/5ce94d828d00074670.png" alt="修改后的标签样式"></p><h3 id="修改代码高亮样式"><a href="#修改代码高亮样式" class="headerlink" title="修改代码高亮样式"></a>修改代码高亮样式</h3><p>在Next主题下，修改代码高亮样式通过修改主题配置文件<code>themes/next/_config.yml</code>中找到以下代码段修改<code>highlight_theme</code>字段实现：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright </span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line"><span class="function">highlight_theme: <span class="title">normal</span> #可修改为<span class="title">night</span>模式</span></span><br></pre></td></tr></table></figure></p><p>各种主题的显示效果可查看<a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="noopener">此链接</a></p><h3 id="公式支持"><a href="#公式支持" class="headerlink" title="公式支持"></a>公式支持</h3><p>此处主要参考<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/theme/[NexT]%E9%85%8D%E7%BD%AEMathJax.html" target="_blank" rel="noopener">NexT官方链接</a>对<code>MathJax</code>进行配置，主要分为以下两步：</p><h4 id="打开NexT内部数学公式渲染引擎"><a href="#打开NexT内部数学公式渲染引擎" class="headerlink" title="打开NexT内部数学公式渲染引擎"></a>打开NexT内部数学公式渲染引擎</h4><p>找到主题配置文件<code>_config.yml</code>中的<code>MathJax Support</code>字段，将其中的enable设为<code>true</code>，便打开了MathJax渲染引擎。<br>若想使用其他数学公式渲染引擎也可以，参照官方链接进行。此处不再赘述。</p><h4 id="打开hexo渲染器"><a href="#打开hexo渲染器" class="headerlink" title="打开hexo渲染器"></a>打开hexo渲染器</h4><p>进入博客所在根目录，利用cmd安装以下功能插件：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save # 卸载hexo-renderer-marked</span><br><span class="line">npm i hexo-renderer-pandoc --save # 或者 hexo-renderer-kramed</span><br></pre></td></tr></table></figure></p><p>然后启动服务器：<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo server</span><br></pre></td></tr></table></figure></p><p>进行公式测试。如果出现错误，可查看<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/theme/[NexT]%E9%85%8D%E7%BD%AEMathJax.html" target="_blank" rel="noopener">官方链接</a>进行解决。</p><p>还可以参考<a href="http://layty.coding.me/2018/09/21/hexo/hexo-Next%E4%B8%BB%E9%A2%98%E4%B8%AD%E6%94%AF%E6%8C%81latex%E5%85%AC%E5%BC%8F/" target="_blank" rel="noopener">此链接</a>配置数学公式支持功能。</p><h4 id="修改公式显示比例"><a href="#修改公式显示比例" class="headerlink" title="修改公式显示比例"></a>修改公式显示比例</h4><p>由于部分公式较为复杂，可能同一公式里会出现字母重叠情况，此时可以对<code>next\layout\_third-party\math\mathjax.swig</code>中的<code>MathJax.Hub.Config</code>内容进行修改，可以实现显示比例的缩放：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">MathJax.Hub.Config(&#123;</span><br><span class="line"><span class="code">        extensions: ["tex2jax.js"],</span></span><br><span class="line"><span class="code">        jax: ["input/TeX", "output/HTML-CSS"],</span></span><br><span class="line"><span class="code">        tex2jax: &#123;</span></span><br><span class="line"><span class="code">          inlineMath: [ ['$','$'], ["\\(","\\)"]  ],</span></span><br><span class="line"><span class="code">          displayMath: [ ['$$','$$'], ["\\[","\\]"] ], </span></span><br><span class="line"><span class="code">          processEscapes: true,</span></span><br><span class="line"><span class="code">          skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']</span></span><br><span class="line"><span class="code">        &#125;,</span></span><br><span class="line"><span class="code">        "HTML-CSS": &#123; </span></span><br><span class="line"><span class="code">          availableFonts: ["TeX","STIX"],</span></span><br><span class="line"><span class="code">          scale: 110,</span></span><br><span class="line"><span class="code">          showMathMenu: false </span></span><br><span class="line"><span class="code">         &#125;</span></span><br><span class="line"><span class="code">      &#125;);</span></span><br></pre></td></tr></table></figure></p><p>其中<code>HTML-CSS</code>下的<code>scale</code>字段便是缩放比例,此处个人设置为<code>110%</code>。有关MathJax详细的配置方法请见<a href="http://docs.mathjax.org/en/latest/config-files.html" target="_blank" rel="noopener">官方链接</a>。</p><h3 id="博客功能配置和美化参考链接"><a href="#博客功能配置和美化参考链接" class="headerlink" title="博客功能配置和美化参考链接"></a>博客功能配置和美化参考链接</h3><p>相应的参考博客链接如下：</p><ul><li><a href="http://yearito.cn/posts/hexo-theme-beautify.html" target="_blank" rel="noopener"><strong>Hexo 搭建个人博客系列：主题美化篇</strong></a>：2018.11.20更新，有关动态背景、看板娘、页面加载进度条、鼠标点击效果等。</li><li><a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener"><strong>Hexo的NexT主题个性化教程：打造炫酷网站</strong></a></li><li><a href="https://vslam.net/2018/03/04/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/" target="_blank" rel="noopener"><strong>Hexo使用攻略-添加分类标签和搜索功能</strong></a></li><li><a href="https://www.jianshu.com/p/e17711e44e00" target="_blank" rel="noopener"><strong>Hexo使用攻略-添加分类及标签</strong></a></li><li><a href="https://blog.csdn.net/wugenqiang/article/details/88609066" target="_blank" rel="noopener"><strong>Hexo的Next主题开启文章目录和调整样式</strong></a>:Next主题下和默认主题添加文章目录的方式不太一样。</li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener"><strong>Hexo官方网站</strong></a></li><li><a href="http://charmlegal.com/2017/12/05/article6/" target="_blank" rel="noopener">Hexo—如何设置文章目录(TOC)</a></li><li><a href="https://shjhe.github.io/hexo/2018/07/04/Hexo%20Next%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%8F%8A%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF/" target="_blank" rel="noopener"><strong>Hexo Next主题开启字数统计及阅读时长</strong></a></li><li><a href="https://zhaliezhi.com/posts/1e17d9f3.html" target="_blank" rel="noopener">Hexo + Next 折腾小记</a>：有关于字体、图片边框、社交链接居中显示、文章目录隐藏、代码高亮样式修改等。</li><li><a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo - Next 主题添加评论功能</a>：使用Valine评论系统</li><li><a href="http://kuangqi.me/tricks/enable-table-of-contents-on-hexo/#%E4%BF%AE%E6%94%B9Landscape%E4%B8%BB%E9%A2%98%E7%9A%84ejs%E6%96%87%E4%BB%B6" target="_blank" rel="noopener">为Hexo博客默认主题添加目录</a></li></ul><h2 id="博客写作注意事项"><a href="#博客写作注意事项" class="headerlink" title="博客写作注意事项"></a>博客写作注意事项</h2><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>在Hexo博客中插入图片有两种方式：</p><h4 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h4><ul><li><p>绝对路径:<br>当Hexo项目中只用到少量图片时，可以将图片统一放在<code>source/images</code>文件夹中，通过markdown语法访问它们。这种引用方式下引用的图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image-name</span>](<span class="link">/images/image.jpg</span>)</span><br></pre></td></tr></table></figure></li><li><p>相对路径:<br>图片也可以采用相对路径，即在文章所属的文件夹中，从而使用相对路径来访问。文章的目录通过配置<code>_config.yml</code>来进行生成。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">post_asset_folder: <span class="title">true</span></span></span><br></pre></td></tr></table></figure></li></ul><p>将<code>_config.yml</code>文件中的配置项<code>post_asset_folder</code>设为<code>true</code>后，执行命令:<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post_name</span><br></pre></td></tr></table></figure></p><p> 在<code>source/_posts</code>中会生成文章<code>post_name.md</code>和同名文件夹<code>post_name</code>。将图片资源放在post_name中，文章就可以使用以下markdown语法来利用相对路径引用图片资源：<br> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">image-name</span>](<span class="link">image.jpg</span>)</span><br></pre></td></tr></table></figure></p><p>image.jpg的绝对路径为：<code>E:/Bolgs/source/_posts/post_name/image.jpg</code>,但与<code>post_name.md</code>是在同级目录文件中，故可使用上述相对路径进行插入。</p><p>上述引用方法存在一个缺陷：图片只能在文章中显示，但无法在首页中正常显示。<br>如果希望图片在文章和首页中同时显示，可以使用标签插件语法。<br> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; % asset_img image.jpg This is an image % &#125;</span><br></pre></td></tr></table></figure></p><p>不过目前个人觉得在文章中显示图片是最重要的，为方便起见，采用相对引用方式足矣。</p><h4 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h4><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如<a href="https://cloudinary.com/" target="_blank" rel="noopener">Cloudinary</a>提供的图片CDN服务，在Cloudinary中上传图片后，会生成对应的url地址，将地址直接拿来引用即可。</p><p>若是无关紧要的图片，也可以使用一些免费图床来生成url地址，直接进行引用。比如<a href="https://sm.ms/" target="_blank" rel="noopener">免费图床sm</a>,只需要选择本地图片upload至该界面，即可生成链接，如下图：</p><p><img src="smms.png" alt="sm.ms免费图床"></p><p>其中第三步所得到的便是url链接。</p><blockquote><p>参考链接: <a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="noopener">Hexo博客写作之插入图片</a></p></blockquote><hr><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><h2 id="npm安装出现low-severity-vulnerabilities"><a href="#npm安装出现low-severity-vulnerabilities" class="headerlink" title="npm安装出现low severity vulnerabilities"></a>npm安装出现low severity vulnerabilities</h2><p>由于部分包的版本问题，在安装某些插件时(比如hexo搜索功能插件)，在<code>Git bash</code>中会出现以下错误：</p><blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-search --save</span><br><span class="line">+ hexo-generator-search@<span class="number">2</span>.<span class="number">4</span>.<span class="number">0</span></span><br><span class="line">updated <span class="number">1</span> package and audited <span class="number">12499</span> packages <span class="keyword">in</span> <span class="number">14</span>.<span class="number">805</span>s</span><br><span class="line">found <span class="number">5</span> low severity vulnerabilities</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span><br></pre></td></tr></table></figure></blockquote><p><em>low severity vulnerabilities</em>直译过来便是<em>低严重漏洞</em>，可以尝试执行<code>npm  audit fix</code>进行修复，但我执行后还是有类似错误。所以查询<a href="https://docs.npmjs.com/auditing-package-dependencies-for-security-vulnerabilities" target="_blank" rel="noopener">官网资料</a>后发现需要手动更新相应的包，输入<code>npm audit</code>可知哪些包需要升级，其中示例如下：<br><img src="https://docs.npmjs.com/assets/images/packages-and-modules/audit-report-vulns-found-manual-review.png" alt="npm audit"><br>根据官网资料中这段话可知包的名称是什么：</p><blockquote><p>For example, if the path to the vulnerability is @package-name &gt; dependent-package &gt; package-with-vulnerability, you will need to update dependent-package.</p></blockquote><p><a href="https://www.npmjs.com.cn/getting-started/updating-global-packages/" target="_blank" rel="noopener">npm更新包</a>的方法为:<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update -g &lt;pachage&gt;</span><br></pre></td></tr></table></figure></p><p>故此处只需要执行命令<code>npm update -g request</code>即可更新<code>request</code>包。若还有其他需要更新的包，重复上述操作即可。</p><h2 id="hexo-g中出现template-render-error"><a href="#hexo-g中出现template-render-error" class="headerlink" title="hexo g中出现template render error"></a><code>hexo g</code>中出现<code>template render error</code></h2><p>自己在写博客的过程中，遇到了上述问题。经<a href="https://github.com/hexojs/hexo/issues/1605" target="_blank" rel="noopener">github相关问题</a>得知，该错误出现的原因是：md文件中所插入的公式里包含两个花括号<code>{{}}</code>，而jekyll和hexo都会解析这个样式，从而导致出错。以下是个人在执行<code>hexo g</code>时所出现的错误截图：</p><p><img src="error_expected-colon-after-dict-key.png" alt="`hexo g`出错截图"></p><h3 id="官方解决方法"><a href="#官方解决方法" class="headerlink" title="官方解决方法"></a>官方解决方法</h3><p>官方所给出的<a href="https://hexo.io/docs/tag-plugins.html#Raw" target="_blank" rel="noopener">解决方式</a>是:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>即在公式前后插入相应的模块：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">$$&#123;X<span class="emphasis">_k&#125; = \&#123;&#123;x_</span>1&#125;,&#123;x<span class="emphasis">_2&#125;,...,&#123;x_</span>n&#125;\&#125; $$ //代码段</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></p><p>但一篇博客动辄公式十几个，自己添加起来费神费力，虽然有人写了<a href="https://mlnote.com/2016/09/03/solved-mathjex-problem/" target="_blank" rel="noopener">python脚本</a>,但经过测试后，并不能自动添加<code>raw tag</code>，希望在后期的hexo中可以解决上述问题。</p><h3 id="权益之计"><a href="#权益之计" class="headerlink" title="权益之计"></a>权益之计</h3><p>由于个人在hexo和Jekyll这两个框架中来回倒腾，发现这两个框架分别是使用的<code>nunjunks</code>和<code>liquid</code>这两个模板引擎，二者均对markdown中的<code>{{、}}、{%、%}、{#、#}</code>字符进行动态解析(非专业人士，可能表达有误)，然而我们并不希望发生这样的事。</p><p>一个权宜之计是，将上述字符中添加空格，至少这种方式在公式中是可以正常解析的，并且也避免了模板引擎<code>nunjunks</code>或者<code>liquid</code>对上述字符进行动态解析。个人目前采用的是此种方法。因为可以使用<code>vs code</code>等任一一款文本编辑器快速查询和替换嘛。</p><p>若使用的hexo框架，另外一个方法是修改nunjunks中的模板标签，这个是偶然在一个<a href="http://xcoding.tech/2018/08/08/hexo/%E5%A6%82%E4%BD%95%E4%BB%8E%E6%A0%B9%E6%9C%AC%E8%A7%A3%E5%86%B3hexo%E4%B8%8D%E5%85%BC%E5%AE%B9%7B%7B%7D%7D%E6%A0%87%E7%AD%BE%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">博客</a>中看见的解决方法。通过直接修改nunjucks模板的源代码来避免上述冲突，还需要修改依赖于nunjunks的其他插件，比如<code>hexo-generator-search</code>这个插件，通常是用于搜索，比如本站的搜索功能。具体情况和修改方式可点击<a href="http://xcoding.tech/2018/08/08/hexo/%E5%A6%82%E4%BD%95%E4%BB%8E%E6%A0%B9%E6%9C%AC%E8%A7%A3%E5%86%B3hexo%E4%B8%8D%E5%85%BC%E5%AE%B9%7B%7B%7D%7D%E6%A0%87%E7%AD%BE%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">博文链接</a>进行查看,此处不再赘述。</p><hr><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>这篇博文是自己搭建的记录和参考网站汇总。也是望后来者可以少踩坑。后续将会更新其他类型文章。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda初体验(windows)</title>
      <link href="/2019/05/16/AnacondaFirstExperience/"/>
      <url>/2019/05/16/AnacondaFirstExperience/</url>
      
        <content type="html"><![CDATA[<p><img src="https://repo.continuum.io/assets/img/logo.png" alt="Anaconda"></p><hr><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于之前的算法编写、调试等过程均在自己的电脑上运行，所以出于以下原因一直对Anaconda嗤之以鼻：</p><ul><li>其存储空间有限，Anaconda会安装很多<code>使用率很低</code>的库；</li><li>本人有一种莫名的<code>折腾</code>的劲儿，喜欢精简而有效的原生python环境。</li></ul><p>但最近为课题组在<strong>Windows Server 2019</strong>搭建服务器深度学习开发环境时，在构建原生python环境中(其实就是安装<strong>tensorflow</strong>这个磨人的小妖精)屡屡受挫，<br>不再想理什么<code>DLL Load fail</code>、<code>ImportError</code>；并且服务器非我一人使用，有人习惯Anaconda，故尝试直接将Anaconda的python环境<br>作为系统默认Python开发环境。以下是个人的折腾记录。</p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装推荐官网下载对应平台的程序安装包，此处贴出<a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">Anaconda官网地址</a>。<br>若要下载历史版本，可见<a href="https://repo.continuum.io/archive/" target="_blank" rel="noopener">链接</a>。</p><p>需要注意的是，每一版的Anaconda都与某一版本的Python版本有所关联，如果不想后期更改<code>base(root)</code>环境或新建其他python版本环境的话，最好选择某一版本的Anaconda<br>进行安装。二者版本对应情况可见<a href="https://blog.csdn.net/yuejisuo1948/article/details/81043823" target="_blank" rel="noopener">链接</a>。<br>在安装过程中，注意以下几个设置：</p><ul><li>安装路径</li><li>是否添加Anacona至环境变量</li><li>是否设置Anaconda所安装的python为默认python环境</li></ul><p>其中安装路径根据实际情况进行设置。笔者一般软件安装路径为非系统盘，如<code>D:\Anaconda3</code>(后续Anaconda的安装路径将写作此路径).若你本机上已安装了python，后两者均不建议进行设置，因为其会改变<br>系统变量中的python环境变量。如有需要，后续可进行更改。如：</p><ul><li><p>添加Anacona至环境变量：添加以下地址至环境变量</p> <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">Anaconda3</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">Anaconda3</span>\<span class="title">Library</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">Anaconda3</span>\<span class="title">Scripts</span></span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="直接更改base-root-环境下的python版本"><a href="#直接更改base-root-环境下的python版本" class="headerlink" title="直接更改base(root)环境下的python版本"></a>直接更改base(root)环境下的python版本</h1><p>此需求大多是为安装tensorflow-gpu而衍生出，因为其对python版本、CUDA等要求甚严。假设需要将默认的python版本(3.7.3)更改为3.6.8，<br>可参考以下两种方式(<a href="https://blog.csdn.net/isyiming/article/details/79225608" target="_blank" rel="noopener">参考链接</a>)：</p><h2 id="Anaconda-Navigator中进行更改"><a href="#Anaconda-Navigator中进行更改" class="headerlink" title="Anaconda Navigator中进行更改"></a>Anaconda Navigator中进行更改</h2><p>打开Anaconda Navigator，找到Environment中base(root)下已安装的python,右键图标进行更改，如下图：</p><ul><li>点击<code>base</code>切换到python环境</li><li>搜索已安装的<code>python</code>库</li><li>右键点击<code>python</code>可出现<code>Mark for specific version installation</code>选项</li><li>点击想切换的<code>python</code>版本代号</li><li>点击页面下方<code>apply</code>按钮即可执行修改(图中未显示)<br><img src="Anaconda修改python版本.png" alt="Anaconda修改python版本"></li></ul><h2 id="Anaconda-Prompt中进行更改"><a href="#Anaconda-Prompt中进行更改" class="headerlink" title="Anaconda Prompt中进行更改"></a>Anaconda Prompt中进行更改</h2><p>直接打开终端或者Anaconda Prompt,输入以下命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install python=<span class="number">3</span>.<span class="number">6</span>.<span class="number">8</span></span><br></pre></td></tr></table></figure><p>若不对默认的base(root)环境进行修改，也可以直接新建相应python版本的环境，以满足需求。在此不做赘述。</p><hr><h1 id="Anaconda-Channels-无法更改后的折衷方案"><a href="#Anaconda-Channels-无法更改后的折衷方案" class="headerlink" title="Anaconda Channels 无法更改后的折衷方案"></a>Anaconda Channels 无法更改后的折衷方案</h1><p>众所周知，由于<code>GFW</code>的原因，国外诸多网站在国内无法正常访问。于是催生出了一系列国内源镜像，为大家提供方便。原本Anaconda在国内也是有镜像源地址的，但是最近由于版权或商标问题，国内诸多镜像地址，如<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华大学镜像</a>、<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">中科大镜像</a>、<a href="http://mirrors.nju.edu.cn/" target="_blank" rel="noopener">南京大学镜像</a>等镜像网站均关闭了对conda源的支持,直接将其链接至官方镜像地址。以下是相关情况的说明和更新：</p><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/news/close-anaconda-service/" target="_blank" rel="noopener">2019-04-16:清华大学关于停止Anaconda镜像服务的通知</a></li><li><a href="https://servers.ustclug.org/2019/04/close-anaconda-service/" target="_blank" rel="noopener">2019-04-25:中科大Anaconda 镜像停止服务</a></li><li><a href="https://zhuanlan.zhihu.com/p/62899936" target="_blank" rel="noopener">知乎:Anaconda 清华源关闭后，怎么办？</a></li></ul><p>所以目前修改Anaconda Channels基本无效，除非是自己搭梯子。否则就自己用官方源慢慢安装和更新吧(<strong>亲测要等很久才能安装上一个库</strong>)。若针对已成功安装Anaconda的用户来说，可以激活Anaconda环境后，用pip命令对第三方库进行安装或者更新。这是一个折衷的方法了。因为pip在国内的镜像地址是可以用的，其中清华的镜像是比较快的。关于修改pip源镜像的地址，可以参考<a href="https://foofish.net/pip.html" target="_blank" rel="noopener">此链接</a>。</p><hr><h1 id="Anaconda安装深度学习框架"><a href="#Anaconda安装深度学习框架" class="headerlink" title="Anaconda安装深度学习框架"></a>Anaconda安装深度学习框架</h1><p>无论是tensorflow还是PyTorch，在GPU的环境下更能发挥其加速作用。安装cpu版本的深度学习框架配置起来较为简单顺畅，在此不做赘述，可自行百度。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>由于利用Anaconda搭建基于Tensorflow或Pytorch的深度学习框架不需要自己安装其他的依赖性，所以个人推荐此方法。若想自己根据原生python搭建上述框架，便需要自行进行以下操作：</p><ul><li>确认自己具有Nvidia的显卡，安装最新<a href="https://www.nvidia.com/Download/index.aspx?lang=cn" target="_blank" rel="noopener">Nvidia显卡驱动</a></li><li>安装<a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener">CUDA</a></li><li>安装<a href="https://developer.nvidia.com/rdp/cudnn-download" target="_blank" rel="noopener">cudnn</a></li></ul><p>需要注意的是，cudnn需要注册Nvidia开发者账户才可以进行下载。其中与tensorflow或pytorch的版本需要一一对应，tensorflow所支持的cuda对应版本可查看<a href="https://www.tensorflow.org/install/source_windows" target="_blank" rel="noopener">此链接</a>寻找适合的版本或参考以下图片：</p><p><img src="tensorflow-cpu-dependency.png" alt="tensorflow-cpu-win-dependency"><br><img src="tensorflow-gpu-dependency-win.png" alt="tensorflow-gpu-win-dependency"></p><h2 id="Anaconda安装Tensorflow"><a href="#Anaconda安装Tensorflow" class="headerlink" title="Anaconda安装Tensorflow"></a>Anaconda安装Tensorflow</h2><p>在Anaconda中安装Tensorflow的过程还是较为简单的，只需要搜索到相应的Tensorflow库，然后选择对应的版本安装即可。因为其会根据所选择的tensorflow版本安装对应的<strong>cuda</strong>和<strong>cudnn</strong>以支持GPU加速。</p><h2 id="Anaconda安装Pytorch"><a href="#Anaconda安装Pytorch" class="headerlink" title="Anaconda安装Pytorch"></a>Anaconda安装Pytorch</h2><p>Pytorch的安装更加人性化，不需要进行各种配置，版本之间的依赖也较少。可以直接选择与cuda相对应版本的pytorch进行安装，如下图：<br><img src="pytorch-setup.png" alt="Pytorch安装"></p><h2 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h2><p>安装上述环境后均需要进行测试，查看是否能够正常使用。<br>打开cmd并启动python开发环境后，可输入以下测试代码进行测试：</p><ul><li><blockquote><p>Tensorflow-gpu测试代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">matrix1 = tf.constant([[<span class="number">3.</span>, <span class="number">3.</span>]])     </span><br><span class="line">matrix2 = tf.constant([[<span class="number">2.</span>],[<span class="number">2.</span>]])    </span><br><span class="line">product = tf.matmul(matrix1, matrix2) </span><br><span class="line">sess = tf.Session()</span><br><span class="line">print(sess.run(product))</span><br></pre></td></tr></table></figure></blockquote></li></ul><p>若输出的信息中有显卡信息，并且没有报错，成功输出结果，则安装成功，可正常使用tensorflow-gpu。</p><ul><li><blockquote><p>Pytorch-gpu测试代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line">torch.cuda.is_available()</span><br></pre></td></tr></table></figure></blockquote></li></ul><p>输出<code>true</code>，则说明GPU驱动和CUDA可以支持Pytorch的加速计算。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>上述是简单的Anaconda安装和深度学习框架搭建基本流程。如需了解细节可阅读相应参考链接。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Deep Learning </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
